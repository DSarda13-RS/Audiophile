"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const router = express_1.default.Router();
const multer_1 = __importDefault(require("multer"));
const upload = (0, multer_1.default)({ storage: multer_1.default.memoryStorage() });
// const upload = multer({dest:'uploads/'});
const { authenticateToken } = require('../middleware/authenticate');
const authBody_1 = require("../middleware/authBody");
const checkRoleLogin_1 = require("../middleware/checkRoleLogin");
const checkRole_1 = require("../middleware/checkRole");
const allUser_1 = require("../controllers/allUser");
router.post('/register', upload.single('file'), authBody_1.authenticateUser, allUser_1.registerUser);
router.post('/login', [authBody_1.authenticateUserLogin, checkRoleLogin_1.checkUserLogin], allUser_1.login);
router.use(authenticateToken);
router.use(checkRole_1.checkUser);
router.post('/add-address', authBody_1.authenticateAddress, allUser_1.addUserAddress);
router.get('/details', allUser_1.getDetails);
router.put('/update', authBody_1.authenticateDetailsUpdate, allUser_1.updateDetails);
router.put('/update-address/:uaId', authBody_1.authenticateAddress, allUser_1.updateAddress);
router.delete('/delete-address/:uaId', allUser_1.deleteAddress);
router.get('/products', allUser_1.getProducts);
router.post('/product/add-to-cart/:pdId', authBody_1.authenticateCart, allUser_1.addToCart);
router.get('/view-cart', allUser_1.viewCart);
router.put('/product/remove-from-cart/:pdId', allUser_1.removeFromCart);
router.put('/update-cart/:pdId', authBody_1.authenticateCart, allUser_1.updateCart);
router.post('/order', authBody_1.authenticateOrder, allUser_1.order);
router.get('/view-order', allUser_1.viewOrder);
exports.default = router;
